diff --git a/ATMsource/ATM.java b/ATMsource/ATM.java
index aa3d187..17143c4 100644
--- a/ATMsource/ATM.java
+++ b/ATMsource/ATM.java
@@ -8,15 +8,22 @@ public class ATM
    private Screen screen; // ATM's screen
    private Keypad keypad; // ATM's keypad
    private CashDispenser cashDispenser; // ATM's cash dispenser
-   private DepositSlot depositSlot; // ATM's deposit slot
+   //private DepositSlot depositSlot; // ATM's deposit slot
    private BankDatabase bankDatabase; // account information database
 
    // constants corresponding to main menu options
    private static final int BALANCE_INQUIRY = 1;
    private static final int WITHDRAWAL = 2;
-   private static final int DEPOSIT = 3;
+   // private static final int DEPOSIT = 3;
+   
+   // added new main menu option
+   private static final int TRANSFER = 3;
+   // changed to last option 5
    private static final int EXIT = 4;
 
+  
+
+
    // no-argument ATM constructor initializes instance variables
    public ATM() 
    {
@@ -25,7 +32,7 @@ public class ATM
       screen = new Screen(); // create screen
       keypad = new Keypad(); // create keypad 
       cashDispenser = new CashDispenser(); // create cash dispenser
-      depositSlot = new DepositSlot(); // create deposit slot
+      //depositSlot = new DepositSlot(); // create deposit slot
       bankDatabase = new BankDatabase(); // create acct info database
    } // end no-argument ATM constructor
 
@@ -91,7 +98,8 @@ public class ATM
             // user chose to perform one of three transaction types
             case BALANCE_INQUIRY: 
             case WITHDRAWAL: 
-            case DEPOSIT:
+            //case DEPOSIT:
+            case TRANSFER:
 
                // initialize as new object of chosen type
                currentTransaction = 
@@ -117,7 +125,7 @@ public class ATM
       screen.displayMessageLine( "\nMain menu:" );
       screen.displayMessageLine( "1 - View my balance" );
       screen.displayMessageLine( "2 - Withdraw cash" );
-      screen.displayMessageLine( "3 - Deposit funds" );
+      screen.displayMessageLine( "3 - Transfer funds" );
       screen.displayMessageLine( "4 - Exit\n" );
       screen.displayMessage( "Enter a choice: " );
       return keypad.getInput(); // return user's selection
@@ -139,10 +147,11 @@ public class ATM
             temp = new Withdrawal( currentAccountNumber, screen, 
                bankDatabase, keypad, cashDispenser );
             break; 
-         case DEPOSIT: // create new Deposit transaction
-            temp = new Deposit( currentAccountNumber, screen, 
-               bankDatabase, keypad, depositSlot );
+         case TRANSFER: // create new Deposit transaction
+            temp = new Transfer( currentAccountNumber, screen, 
+               bankDatabase, keypad);
             break;
+
       } // end switch
 
       return temp; // return the newly created object
diff --git a/ATMsource/BankDatabase.java b/ATMsource/BankDatabase.java
index 3978497..d40deca 100644
--- a/ATMsource/BankDatabase.java
+++ b/ATMsource/BankDatabase.java
@@ -41,6 +41,22 @@ public class BankDatabase
          return false; // account number not found, so return false
    } // end method authenticateUser
 
+   // to check whether the account is exists in the database
+   public boolean accountExists(int ACnumber){
+
+      int acFound = 0;
+
+      // loop through accounts searching for matching account number
+      for ( Account currentAccount : accounts )
+      {
+         if(currentAccount.getAccountNumber() == ACnumber)
+            acFound += 1;
+      } // end for
+
+      // return true when only one account is matched with ACnumber
+      return acFound==1;
+
+   }
    // return available balance of Account with specified account number
    public double getAvailableBalance( int userAccountNumber )
    {
diff --git a/ATMsource/Deposit.java b/ATMsource/Deposit.java
deleted file mode 100644
index 916ef70..0000000
--- a/ATMsource/Deposit.java
+++ /dev/null
@@ -1,102 +0,0 @@
-// Deposit.java
-// Represents a deposit ATM transaction
-
-public class Deposit extends Transaction
-{
-   private double amount; // amount to deposit
-   private Keypad keypad; // reference to keypad
-   private DepositSlot depositSlot; // reference to deposit slot
-   private final static int CANCELED = 0; // constant for cancel option
-
-   // Deposit constructor
-   public Deposit( int userAccountNumber, Screen atmScreen, 
-      BankDatabase atmBankDatabase, Keypad atmKeypad, 
-      DepositSlot atmDepositSlot )
-   {
-      // initialize superclass variables
-      super( userAccountNumber, atmScreen, atmBankDatabase );
-
-      // initialize references to keypad and deposit slot
-      keypad = atmKeypad;
-      depositSlot = atmDepositSlot;
-   } // end Deposit constructor
-
-   // perform transaction
-   public void execute()
-   {
-      BankDatabase bankDatabase = getBankDatabase(); // get reference
-      Screen screen = getScreen(); // get reference
-
-      amount = promptForDepositAmount(); // get deposit amount from user
-
-      // check whether user entered a deposit amount or canceled
-      if ( amount != CANCELED )
-      {
-         // request deposit envelope containing specified amount
-         screen.displayMessage( 
-            "\nPlease insert a deposit envelope containing " );
-         screen.displayDollarAmount( amount );
-         screen.displayMessageLine( "." );
-
-         // receive deposit envelope
-         boolean envelopeReceived = depositSlot.isEnvelopeReceived();
-
-         // check whether deposit envelope was received
-         if ( envelopeReceived )
-         {  
-            screen.displayMessageLine( "\nYour envelope has been " + 
-               "received.\nNOTE: The money just deposited will not " + 
-               "be available until we verify the amount of any " +
-               "enclosed cash and your checks clear." );
-            
-            // credit account to reflect the deposit
-            bankDatabase.credit( getAccountNumber(), amount ); 
-         } // end if
-         else // deposit envelope not received
-         {
-            screen.displayMessageLine( "\nYou did not insert an " +
-               "envelope, so the ATM has canceled your transaction." );
-         } // end else
-      } // end if 
-      else // user canceled instead of entering amount
-      {
-         screen.displayMessageLine( "\nCanceling transaction..." );
-      } // end else
-   } // end method execute
-
-   // prompt user to enter a deposit amount in cents 
-   private double promptForDepositAmount()
-   {
-      Screen screen = getScreen(); // get reference to screen
-
-      // display the prompt
-      screen.displayMessage( "\nPlease enter a deposit amount in " + 
-         "CENTS (or 0 to cancel): " );
-      int input = keypad.getInput(); // receive input of deposit amount
-      
-      // check whether the user canceled or entered a valid amount
-      if ( input == CANCELED ) 
-         return CANCELED;
-      else
-      {
-         return ( double ) input / 100; // return dollar amount 
-      } // end else
-   } // end method promptForDepositAmount
-} // end class Deposit
-
-
-
-/**************************************************************************
- * (C) Copyright 1992-2007 by Deitel & Associates, Inc. and               *
- * Pearson Education, Inc. All Rights Reserved.                           *
- *                                                                        *
- * DISCLAIMER: The authors and publisher of this book have used their     *
- * best efforts in preparing the book. These efforts include the          *
- * development, research, and testing of the theories and programs        *
- * to determine their effectiveness. The authors and publisher make       *
- * no warranty of any kind, expressed or implied, with regard to these    *
- * programs or to the documentation contained in these books. The authors *
- * and publisher shall not be liable in any event for incidental or       *
- * consequential damages in connection with, or arising out of, the       *
- * furnishing, performance, or use of these programs.                     *
- *************************************************************************/
\ No newline at end of file
diff --git a/ATMsource/cp/ATM.class b/ATMsource/cp/ATM.class
index 25f4aa2..8be722f 100644
Binary files a/ATMsource/cp/ATM.class and b/ATMsource/cp/ATM.class differ
diff --git a/ATMsource/cp/BankDatabase.class b/ATMsource/cp/BankDatabase.class
index 92c06bb..3349273 100644
Binary files a/ATMsource/cp/BankDatabase.class and b/ATMsource/cp/BankDatabase.class differ
diff --git a/fix.txt b/fix.txt
index e69de29..6b7e294 100644
--- a/fix.txt
+++ b/fix.txt
@@ -0,0 +1,4 @@
+this is fix branch
+
+edited 15th 10:
+    
\ No newline at end of file
